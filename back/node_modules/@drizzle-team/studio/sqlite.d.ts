import { Relations } from "drizzle-orm";
import { AnySQLiteTable, BaseSQLiteDatabase } from "drizzle-orm/sqlite-core";
import { ProxyParams, QueryEngine } from "./common";
type SQLiteDB = BaseSQLiteDatabase<"async" | "sync", any, Record<string, never>>;
export type SQLiteSetup = {
    dialect: "sqlite";
    db: SQLiteDB;
    proxy: (it: ProxyParams) => Promise<any>;
    raw: (sql: string) => Promise<any[][]>;
    schema: Record<string, Record<string, AnySQLiteTable>>;
    relations: Record<string, Relations>;
    ts: {
        imports: string;
        declarations: string;
        schemaEntry: string;
    };
};
export declare const sqliteQueryEngine: (setup: SQLiteSetup) => Promise<QueryEngine>;
export {};
