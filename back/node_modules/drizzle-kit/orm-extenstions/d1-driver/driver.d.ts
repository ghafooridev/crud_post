import { type DrizzleConfig, QueryWithTypings, SQL } from "drizzle-orm";
import { BaseSQLiteDatabase, SQLiteAsyncDialect } from "drizzle-orm/sqlite-core";
import { D1WranglerResults } from "./session";
export type DrizzleD1WranglerDatabase<TSchema extends Record<string, unknown> = Record<string, never>> = BaseSQLiteDatabase<"async", D1WranglerResults, TSchema>;
export declare class WranglerDialect extends SQLiteAsyncDialect {
    sqlToQuery(sql: SQL): QueryWithTypings;
}
export declare function drizzle<TSchema extends Record<string, unknown> = Record<string, never>>(client: (query: string, configPath: string, dbName: string) => Promise<any>, configPath: string, dbName: string, config?: DrizzleConfig<TSchema>): DrizzleD1WranglerDatabase<TSchema>;
